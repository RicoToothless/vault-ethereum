name: build

on:
  - push

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.17.x]
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    runs-on: ubuntu-20.04
    name: Build and release
    env:
      GOBIN: /tmp/.bin
    steps:
      - name: Checkout code into the Go module directory.
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

          #      - name: Build and generate sha256sum file
          #        env:
          #          CGO_ENABLED: 1
          #          GOOS: ${{ matrix.goos }}
          #          GOARCH: ${{ matrix.goarch }}
          #        run: |
          #          CGO_ENABLED=1 GOOS=linux go build -ldflags '-extldflags "-static"' -v -o /tmp/vault-ethereum-${{ matrix.goos }}-${{ matrix.goarch }} .
          #          sha256sum -b /tmp/vault-ethereum-${{ matrix.platform }} > /tmp/vault-ethereum-sha256sum-${{ matrix.goos }}-${{ matrix.goarch }}
          #
          #      - name: Release
          #        uses: softprops/action-gh-release@v1
          #        if: startsWith(github.ref, 'refs/tags/')
          #        with:
          #          files: |
          #            /tmp/vault-ethereum-${{ matrix.goos }}-${{ matrix.goarch }}
          #            /tmp/vault-ethereum-sha256sum-${{ matrix.goos }}-${{ matrix.goarch }}

      - uses: wangyoucao577/go-release-action@v1.16
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "${{ env.CMD_PATH }}"
          build_flags: -v
          ldflags: -extldflags "-static"
          sha256sum: TRUE
